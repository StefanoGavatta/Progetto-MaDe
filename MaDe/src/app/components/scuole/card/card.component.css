.card {
  width: 295px; /* Dimensione ridotta */
  min-height: 350px; /* Altezza minima invece di fissa */
  margin: 10px;
  border: 1px solid rgba(0, 0, 0, 0.125);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  cursor: pointer; /* Indica che è cliccabile */
  position: relative; /* Per posizionare eventuali elementi overlay */
  color: #000; /* Garantisce che tutto il testo sia scuro per contrasto */
  border-radius: 0; /* Rimuove gli angoli arrotondati e li rende spigolosi */
  border-top-left-radius: 15px; /* Arrotonda solo l'angolo in alto a sinistra */
  overflow: hidden; /* Evita che il contenuto esca fuori dalla carta */
  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.3s ease;
  display: flex;
  flex-direction: column;
  padding-left: 30px; /* Bordo sinistro spesso */
  padding-top: 18px; /* Aggiungo lo stesso bordo alla parte superiore */
  padding-right: 30px; /* Piccolo padding sul lato destro */
  flex-grow: 1; /* Permette alla card di crescere in base al contenuto */
  height: 100%; /* Usa l'altezza completa disponibile */
  will-change: transform; /* Ottimizza le animazioni */
}

.card:hover {
  transform: translateY(-10px); /* Solleva maggiormente la carta */
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2); /* Ombra più grande e intensa */
}

.card-img-top {
  height: 250px; /* Immagine più grande */
  width: 250px; /* Mantengo la proporzione quadrata */
  object-fit: cover; /* Mantiene le proporzioni dell'immagine ritagliandola se necessario */
  border-radius: 5px 0 0 5px; /* Arrotonda solo gli angoli sinistri */
}

.card-img-container {
  display: flex;
  justify-content: flex-start; /* Allinea l'immagine a destra */
  overflow: hidden;
  height: 200px; /* Altezza aumentata */
  width: 100%;
  margin-top: -18px; /* Mantengo lo stesso offset */
  margin-bottom: 10px; /* Aggiungo un piccolo margine inferiore */
  padding-right: 0; /* Rimuove il padding a destra per attaccarla al bordo */
}

.card-img-container img {
  object-fit: cover;
  width: 200px; /* Immagine più grande */
  height: 200px; /* Immagine più grande */
}

.card-body {
  padding: 10px; /* Ridotto il padding */
  padding-left: 0; /* Rimuove il padding a sinistra */
  display: flex;
  flex-direction: column;
  flex-grow: 1; /* Fa crescere il body per occupare lo spazio disponibile */
}

.card-title {
  color: #000000;
  font-size: 1.2rem;
  margin-bottom: 5px; /* Ridotto il margine inferiore */
}

.divider {
  height: 1px;
  background-color: #cccccc;
  width: 100%;
  margin: 10px 0;
}

.card-type {
  color: #555;
  font-size: 0.85rem;
  font-style: italic;
  margin-bottom: 5px;
  display: inline-block; /* Fa in modo che lo sfondo copra solo il testo */
  padding: 0; /* Rimosso il padding */
}

.card-text {
  color: #000000;
  font-size: 0.9rem;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  line-clamp: 3; /* Proprietà standard */
  flex-grow: 1; /* Fa crescere il testo per riempire lo spazio disponibile */
}

.card-button-container {
  position: absolute;
  bottom: 15px;
  right: 15px;  /* Cambiato da left a right per posizionare a destra */
}

.btn-details {
  background-color: #007bff;
  color: white;
  font-size: 0.9rem;
  padding: 5px 15px;
  border-radius: 4px;
  width: auto;
}

.btn-details:hover {
  background-color: #0069d9;
}

.card-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}

.card-grid .card {
  height: 100%; /* Assicura che tutte le card nella stessa riga abbiano la stessa altezza */
  display: flex;
  flex-direction: column;
}


/* From Uiverse.io by Cevorob */ 
.burger {
  position: relative;
  width: 40px;
  height: 30px;
  background: transparent;
  cursor: pointer;
  display: block;
}

.burger input {
  display: none;
}

.burger span {
  display: block;
  position: absolute;
  height: 4px;
  width: 100%;
  background: black;
  border-radius: 9px;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: .25s ease-in-out;
}

.burger span:nth-of-type(1) {
  top: 0px;
  transform-origin: left center;
}

.burger span:nth-of-type(2) {
  top: 50%;
  transform: translateY(-50%);
  transform-origin: left center;
}

.burger span:nth-of-type(3) {
  top: 100%;
  transform-origin: left center;
  transform: translateY(-100%);
}

.burger input:checked ~ span:nth-of-type(1) {
  transform: rotate(45deg);
  top: 0px;
  left: 5px;
}

.burger input:checked ~ span:nth-of-type(2) {
  width: 0%;
  opacity: 0;
}

.burger input:checked ~ span:nth-of-type(3) {
  transform: rotate(-45deg);
  top: 28px;
  left: 5px;
}